#version 460 core
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

layout (std430, binding = 0) buffer PositionBuffer {
		vec4 positions[];
};

layout (std430, binding = 1) buffer DirectionBuffer {
		vec4 directions[];
};

layout (std430, binding = 2) buffer ColorBuffer {
	vec4 colors[];
};

layout(location = 6) uniform float delta;
layout(location = 7) uniform vec3 spawnPos;

float rand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void main(){
	uint index = gl_GlobalInvocationID.x;
	vec4 pos = positions[index];
	vec4 dir = directions[index];
	vec4 color = colors[index];

	dir = dir;
	pos += dir * delta;
	color = vec4(1,0,0,0);

	positions[index] = pos;
	directions[index] = dir;
	colors[index] = color;
}